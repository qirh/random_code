
name: Deploy static content and react projects to GH Pages

on:
  push:
    branches: ["main"]

  # run workflow manually
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Find project directories
    - name: Detect Projects
      id: detect_projects
      run: |
        # Find directories with package.json (React or Node-based projects)
        react_dirs=$(find . -name package.json -exec dirname {} \;)
        echo "react_dirs=$react_dirs" >> $GITHUB_ENV

        # Find other static directories with index.html
        static_dirs=$(find . -name index.html -exec dirname {} \;)
        echo "static_dirs=$static_dirs" >> $GITHUB_ENV

    # Step 3: Create a Combined Build Directory
    - name: Create Combined Directory
      run: mkdir final_build

    # Step 4: Build React Apps
    - name: Build React Apps
      if: env.react_dirs
      run: |
        for dir in $react_dirs; do
          echo "Building React app in $dir"
          cd $dir
          npm ci
          npm run build
          mv build/* ../../final_build/ # Move the build output to the final_build directory
          cd -
        done

    # Step 5: Prepare Static Directories
    - name: Collect Static Directories
      if: env.static_dirs
      run: |
        for dir in $static_dirs; do
          echo "Collecting static directory $dir"
          cp -r $dir/* final_build/ # Copy static files to the final_build directory
        done

    # Step 6: Deploy to GitHub Pages
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: final_build